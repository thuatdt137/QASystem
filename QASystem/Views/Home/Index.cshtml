@model List<QASystem.Models.Question>
@using QASystem.Models
@{
    ViewData["Title"] = "Home";
    var recentAnswers = ViewBag.RecentAnswers as List<QASystem.Models.Answer>;
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    string keyword = ViewBag.Keyword;
    string selectedTag = ViewBag.SelectedTag;
    string username = ViewBag.Username;
    var questionStats = ViewBag.QuestionStats as Dictionary<int, QuestionStatsViewModel>;
}

<div class="container mt-4">
    <!-- Hiển thị thông báo lỗi nếu có -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["Error"]
        </div>
    }

    <!-- Form tạo câu hỏi -->
    @if (User.Identity.IsAuthenticated)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title">Ask a Question</h5>
                <form asp-action="CreateQuestion" method="post" enctype="multipart/form-data">
                    <div class="mb-3">
                        <input name="title" id="questionTitle" class="form-control" placeholder="Enter your question title" required />
                    </div>
                    <div id="additionalFields" style="display: none;">
                        <div class="mb-3">
                            <textarea name="content" id="questionContent" class="form-control" placeholder="Describe your question"></textarea>
                        </div>
                        <div class="mb-3">
                            <input name="tags" class="form-control" placeholder="e.g., C#, Python, Java (comma-separated)" />
                        </div>
                        <div class="mb-3">
                            <label for="image" class="form-label">Upload Image (optional)</label>
                            <input type="file" name="image" id="image" class="form-control" accept="image/*" />
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Post Question</button>
                    </div>
                </form>
            </div>
        </div>
    }

    <!-- Nút biểu tượng filter -->
    <div class="mb-4">
        <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#filterModal">
            <i class="bi bi-funnel"></i> Filter Questions
        </button>
    </div>

    <!-- Modal chứa form lọc -->
    <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="filterModalLabel">Filter Questions</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-action="Index" method="get">
                        <div class="mb-3">
                            <label class="form-label">Keyword</label>
                            <input name="keyword" class="form-control" placeholder="Search by keyword" value="@keyword" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Tag</label>
                            <input name="tag" class="form-control" placeholder="Filter by tag" value="@selectedTag" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <input name="username" class="form-control" placeholder="Filter by username" value="@username" />
                        </div>
                        <button type="submit" class="btn btn-primary w-100" data-bs-dismiss="modal">Apply Filter</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Danh sách câu hỏi -->
        <div class="col-md-8">
            <h4 class="mb-3">Recent Questions</h4>
            @if (Model.Any())
            {
                @foreach (var question in Model)
                {
                    var stats = questionStats != null && questionStats.ContainsKey(question.QuestionId)
                    ? questionStats[question.QuestionId]
                    : new QuestionStatsViewModel();
                    <div class="card shadow-sm mb-3">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-2">
                                <img src="@(question.User?.AvatarUrl ?? "/images/default-avatar.png")" alt="Avatar" class="rounded-circle me-2" style="width: 40px; height: 40px;" />
                                <p class="text-muted mb-0">Posted by <strong>@question.User?.UserName</strong></p>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0">
                                    <a asp-controller="Questions" asp-action="Details" asp-route-id="@question.QuestionId" class="text-decoration-none">
                                        @question.Title
                                    </a>
                                </h5>
                                <div class="text-muted small">
                                    <span class="me-3"><i class="bi bi-hand-thumbs-up"></i> @stats.VoteCount</span>
                                    <span class="me-3"><i class="bi bi-chat"></i> @stats.AnswerCount</span>
                                    <span>@(stats.LatestAnswerTime.HasValue ? stats.LatestAnswerTime.Value.ToString("MMMM dd, yyyy HH:mm") : "No answers yet")</span>
                                </div>
                            </div>
                            <div class="mt-2">
                                @if (question.Tags != null && question.Tags.Any())
                                {
                                    foreach (var tag in question.Tags)
                                    {
                                        <span class="badge bg-primary me-1">@tag.Name</span>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted small">No tags</span>
                                }
                            </div>
                            @if (!string.IsNullOrEmpty(question.ImageUrl))
                            {
                                <div class="mt-2">
                                    <img src="@question.ImageUrl" alt="Question Image" class="img-fluid" style="max-height: 200px;" />
                                </div>
                            }
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="mt-2">
                                    <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#reportModal"
                                            data-id="@question.QuestionId" data-type="question">
                                        <i class="bi bi-exclamation-triangle"></i> Report
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                }
                <nav aria-label="Questions pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-keyword="@keyword" asp-route-tag="@selectedTag" asp-route-username="@username">Previous</a>
                        </li>
                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == currentPage ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-keyword="@keyword" asp-route-tag="@selectedTag" asp-route-username="@username">@i</a>
                            </li>
                        }
                        <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-keyword="@keyword" asp-route-tag="@selectedTag" asp-route-username="@username">Next</a>
                        </li>
                    </ul>
                </nav>
            }
            else
            {
                <p class="text-muted">No questions match your filter.</p>
            }
        </div>

        <!-- Danh sách câu trả lời gần đây -->
        <div class="col-md-4">
            <h4 class="mb-3">Recent Answers</h4>
            @if (recentAnswers != null && recentAnswers.Any())
            {
                @foreach (var answer in recentAnswers)
                {
                    <div class="card shadow-sm mb-3">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-2">
                                <img src="@(answer.User?.AvatarUrl ?? "/images/default-avatar.png")" alt="Avatar" class="rounded-circle me-2" style="width: 40px; height: 40px;" />
                                <p class="text-muted mb-0">Answered by <strong>@answer.User?.UserName</strong></p>
                            </div>
                            <div class="card-text text-muted">@Html.Raw(answer.Content.Substring(0, Math.Min(50, answer.Content.Length)))@(answer.Content.Length > 50 ? "..." : "")</div>
                            @if (!string.IsNullOrEmpty(answer.ImageUrl))
                            {
                                <div class="mt-2">
                                    <img src="@answer.ImageUrl" alt="Answer Image" class="img-fluid" style="max-height: 100px;" />
                                </div>
                            }
                            <p class="text-muted small">
                                on @answer.CreatedAt.ToString()
                                <br />
                                to <a asp-controller="Questions" asp-action="Details" asp-route-id="@answer.QuestionId" class="text-decoration-none">@answer.Question.Title</a>
                            </p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No recent answers yet.</p>
            }
        </div>
    </div>

    <!-- Modal Báo cáo -->
    <div class="modal fade" id="reportModal" tabindex="-1" aria-labelledby="reportModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="reportModalLabel">Report Content</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-controller="Questions" asp-action="Report" method="post">
                        <input type="hidden" name="questionId" id="reportQuestionId" />
                        <input type="hidden" name="answerId" id="reportAnswerId" />
                        <div class="mb-3">
                            <label for="reason" class="form-label">Reason for reporting</label>
                            <textarea name="reason" id="reason" class="form-control" rows="3" placeholder="Please explain why you are reporting this content" required></textarea>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Submit Report</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <script>
        document.getElementById('questionTitle').addEventListener('focus', function () {
            var additionalFields = document.getElementById('additionalFields');
            if (additionalFields.style.display === 'none') {
                additionalFields.style.display = 'block';
                tinymce.init({
                    selector: '#questionContent',
                    height: 300,
                    plugins: 'advlist autolink lists link image charmap preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount',
                    toolbar: 'undo redo | formatselect | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | code preview',
                    menubar: false,
                    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
                });
            }
        });

        document.querySelectorAll('[data-bs-target="#reportModal"]').forEach(button => {
            button.addEventListener('click', function () {
                var id = this.getAttribute('data-id');
                var type = this.getAttribute('data-type');
                var questionIdField = document.getElementById('reportQuestionId');
                var answerIdField = document.getElementById('reportAnswerId');

                if (type === 'question') {
                    questionIdField.value = id;
                    answerIdField.value = '';
                } else if (type === 'answer') {
                    questionIdField.value = '';
                    answerIdField.value = id;
                }
            });
        });
    </script>
}